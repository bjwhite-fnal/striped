Structure:

Index: (n,5):
    [:,0] - n
    [:,1] - lower index start
    [:,2] - lower index end + 1    
    [:,3] - data start    
    [:,4] - data end + 1
    
Example:
    Data:
        [
            [
                [0,1,2,3],
                [4],
                [],
                [5,6]
            ],
            [],
            [
                [7],
                []
                [8,9]
            ]
        ]
    Flat data:
        [0,1,2,3,4,5,6,7,8,9]
    
    Flat index:
        [4,4,1,0,2,0,3,1,0,2]
        
    Skeleton Index:
        [
            [4,0,3]
            [4,1,0,2,1,0,2]
        ]
        
    Expanded Index:
        Depth = 2
        Layer 0:    [ (4,0,4,0,7),                                        (0,4,4,7,7), (3,4,7,7,10) ]  
        Layer 1:    [ (4,0,0,0,4), (1,0,0,4,5), (0,0,0,5,5), (2,0,0,5,7),              (1,0,0,7,8), (0,0,0,8,8,), (2,0,0,8,10)]
        
Index building:

1. Start from lowest layer as if Data looks like:

            [
                [0,1,2,3],
                [4],
                [],
                [5,6],
                [7],
                []
                [8,9]
            ]

    Index:
        Depth = 1
        Layer 0:    [ (4,0,0,0,4), (1,0,0,4,5), (0,0,0,5,5), (2,0,0,5,7), (1,0,0,7,8), (0,0,0,8,8,), (2,0,0,8,10)]
            
    Build level 1 using input: [4,0,3]:
    
        Layer 1:    [ (4,0,4,0,7), (0,4,4,7,7), (3,4,7,10)]
    
    Add lower layer:
    
        Depth = 2
        Layer 1:    [ (4,0,4,0,7),                                        (0,4,4,7,7), (3,4,7,7,10) ]  
        Layer 0:    [ (4,0,0,0,4), (1,0,0,4,5), (0,0,0,5,5), (2,0,0,5,7),              (1,0,0,7,8), (0,0,0,8,8,), (2,0,0,8,10)]








Example with depth = 3
    Data:
        [
            [
                [
                    [0,1],
                    [2]
                ],
                [],
                [
                    [],
                    [3,4,5]
                ]
            ],
            [],
            [
                [
                    [],
                    [6],
                    [7],
                ]
            ],
            [
                [
                    [],
                    [8,9]
                ]
            ]
        ]

    Flat:
        [0,1,2,3,4,5,6,7,8,9]
        
    1. Depth = 1
        Layer 0:    [ (2,0,0,0,2), (1,0,0,2,3), (0,0,0,3,3), (3,0,0,3,6), (0,0,0,6,6), (1,0,0,6,7), (1,0,0,7,8), (0,0,0,8,8), (2,0,0,8,10) ]
        
    2. Depth = 2    input: [2,0,2,3,2]
        Layer 1:    [ (2,0,2,0,3),              (0,2,2,3,3), (2,2,4,3,6),              (3,4,7,6,8),                           (2,7,9,8,10)]
        Layer 0:    [ (2,0,0,0,2), (1,0,0,2,3),              (0,0,0,3,3), (3,0,0,3,6), (0,0,0,6,6), (1,0,0,6,7), (1,0,0,7,8), (0,0,0,8,8), (2,0,0,8,10) ]
        
    3. Depth = 3    input: [3,0,1,1]
        Layer 2:    [ (3,0,3,0,6),                                        (0,3,3,6,6),              (1,3,4,6,8),                           (1,4,5,8,10)]
        Layer 1:    [ (2,0,2,0,3),              (0,2,2,3,3), (2,2,4,3,6),                           (3,4,7,6,8),                           (2,7,9,8,10)]
        Layer 0:    [ (2,0,0,0,2), (1,0,0,2,3),              (0,0,0,3,3),              (3,0,0,3,6), (0,0,0,6,6), (1,0,0,6,7), (1,0,0,7,8), (0,0,0,8,8), (2,0,0,8,10) ]
        
        

0,2,4
3,4,4,0,0,1
3,3,2,2,0,2,0,1,1,3,1,3

0,2,                  4,
    3,      4,          4,       ,0,0,1
	  3,3,2,  2,0,2,0,    1,1,3,1,      3

(0,0,0,0,0),(2,0,2,0,12),                                                                  (4,2,6,12,21)
(3,0,3,0,8),                        (4,3,7,8,12),                                          (4,7,11,12,18),(0,11,11,18,18),(0,11,11,18,18),         (1,11,12,18,21)
(3,0,0,0,3),(3,0,0,3,6),(2,0,0,6,8),(2,0,0,8,10),(0,0,0,10,10),(2,0,0,10,12),(0,0,0,12,12),(1,0,0,12,13),(1,0,0,13,14),(3,0,0,14,17),(1,0,0,17,18),(3,0,0,18,21)


		
Columns

event.attr[v,v,v...]

DB:     event.attr -> 	{depth:depth, size: attr.@size}
						Data:attr
						
Unpack:	unfold_from_simple(simple_index(attr.@size), flat_data) -> [[[...]]]

event.Muon.attr[v,v,...]
DB:		event.Muon.attr: ->	{depth:depth-1(without Muon), size:Muon.attr.@size}, Muon.@size implicitly
						Data:Muon.attr
						
Unpack:	unfold_from_simple(simple_index(depth (without Muon), Muon.attr.@size), flat)
		add_simple_top_index(Muon.@size)
